David Brandon:	[inaudible 00:00:00] 89. My name is David Brandon. I'm a director advanced computing environments, and it's my privilege to open the conference by introducing Dan Lynch, the President of Advanced Computing Environments. If you look around this morning, you'll see several thousand people here this morning. Indeed, by the end of this week, by expect about 10,000 of your colleagues will have visited the exhibits, or attended the conference, or participated in the tutorials of which there were about 2,500 in the last few days.

	All of us at Advanced Computing are proud that we can bring you this conference, but the one person who really made it possible is Dan Lynch. He sensed the need for more information about networking, he developed the concepts, he brought together the staff to get it started, and he worked long and hard hours over the earlier [InterOp 00:00:51] conference. Most of you know Dan, for those who don't let me just give you a few details. He's a network guru, he won his spurs on the ARPANET, the internet, and TCPIP at SRI, ISI, and McDonald Douglas. He's also a mathematician holding an M.S. in Math from UCLA, and most importantly he's an acknowledged wine authority. Please join me in welcoming Dan Lynch. Thank you.

Dan Lynch:	Thank you very much, David. We're pretty good at debugging networks, but video production I guess isn't our strong suit this morning but we're getting it going. We have a great crew here. The problem was simple; Doug Engelbart, who is our main speaker, made a simple request when he came and saw the facility. Said, ["Gee 00:01:44], I'd like to look at the slides too." So we're having to deal with that, and I think it'll work out fine.

	Doug Engelbart, as John Pastel and I once said to each other about five or six years ago, is the father of us all in so much of what we do in this business and he started thinking about these problems in the 50s. I really wanted to bring him to you today to have him describe to you his visions for the future. Doug is always about 25 years ahead of where we are. He sounded crazy a long time ago. He may sound crazy today also, and he doesn't mind that. He's got a good track record. He invented the mouse, Windows, Hypertext ... they didn't always call these things those words when he did his original research, but that's what they've come out to be.

	Now, I'm going to stop giving him much of an introduction because I really want to have him introduce himself. If we could roll the tape, you will see Doug Engelbart in earlier years, if and when the tape is rolling, at a 1968 conference. Is it rolling?

Doug Engelbart:	[Medium 00:03:16] Here for the rest of the show, and I should tell you I'm backed up with quite a staff of people between here and Menlo Park where Stanford research is located, some thirty miles south of here. If everyone [else 00:03:29] does their job well, it'll all go very interesting I think. The research program that I'm going to describe to you is quickly characterizable by saying, If in your office, you as an intellectual worker, were supplied with a computer display backed up by a computer that was alive for you all day and was instantly responsive to every action you had, how much value could you derive from that?"

	Well, this basically characterizes what we've been pursuing for many years in what we call the AUGMENT Human Intellect Research Center at Stanford Research Institute. Look what else we can do in here. I've got this file that's structured. If I want to see what's in there, I can walk down the hierarchy levels and see or return ... but there's another thing I can do. This route I said I have here ... so here, I'm afraid I'll need a different picture to do.

	Here's what I drew with the picture drawing capability here, it's a slight map if I start from work, and here's the route I seem to have to go to to pick up all the materials and that's my plan for getting home tonight. That if I want to, I can say "The library, what am I supposed to pick up there?" I can just point to that, and oh, I see. Overdue books and all. Well, there's a statement there with that name on it. Go back, what am I supposed to pick up at the drug store? Hmm, I see very [interesting 00:05:08]. All right, market? Oh I've already seen that, [buy some 00:05:14] like that. Gee, that's too much.

	Anyway, so we have this feature of structuring our material hierarchically. Being able to move around it very well. When we get a hierarchy, such as I can show you here now, I can do things if I want to just say, "I'd like to interchange produce and canned materials." Bingo. They're all numbered rightly if I care to look, interchanging them very quickly. Cans are going to get interchanged with produce. They do it and all gets renumbered. I have ways of starting over, making different views, moving around, going to specified points, and modifying the structure. At the same time I've seen that I have a repertoire of different entities like character, knock off that character. Replace the character, make that P.

	I have entities of all sorts and I can say I want to do operations on, and this basic structure I can move over and study and get about very quickly. That is the essence now. That's the essence of the tool we have. [There are a 00:06:34] lot of details that I've left out for you, and now I'd like to stop a minute and just make sure you understand we're shifting from illustrative material to the real working stuff, in case you wouldn't recognize it otherwise.

	We've used this tool to do our daily work and it's ... Our system has been built ... This time sharing system for about six months now it's been working, and in that time, we've gone from getting one console to getting about six working now, with six more due the rest of Spring. This is our fourth computer in which we've had this kind of a system, so we've learned a lot about user features we want and how to be thoroughly skillful. But this next step about learning how when you're faced with having this in your office all day, as I now do in a very exciting sense, how do you get that to work for yourself? How do you organize your files, what kind of things do you do? To get going on this, let's switch away from the tool we have here [crosstalk 00:07:37]

Dan Lynch:	Okay, let's cut the film now and get ... Can we cut the film please? Okay, now lets go live with Doug Engelbart. Doug is now with Stanford University and is head of a project that he has initiated called the Bootstrap Project. I think that Doug will give us some insight into his plans for the future. Doug Engelbart.

Doug Engelbart:	Fine. Thanks very much, Dan. It's hard to believe that was 21 years ago. It's hard for me to believe it too. What I'd like to do today though is sort of talk to you some about in the general pursuit that I was committed to in those days and I've been ever since, there are differences in the concepts that a person generates. One person will look at a problem issue with one set of concepts and a framework, and another look in another framework picture, and they go about it in very different ways. I began by being very much motivated about what the computers and communication technology could do for organizations. The whole motivation was that by 1962 I generated a think piece that I call my conceptual framework. That's [when 00:09:25] I think I credit it with producing most of the sort of ... things that were very different for the day in there because it was the way I was thinking about "Ah, you can augment people. Not automate them."

	What I'd like to do today is sort of share some of those conceptual things and mix them in with a sequence of explicit evolutionary things we did. Some of which are still sort of different from what's accepted in the flow of things, but I think that they'll be coming. At least they deserve a fair amount of ... I can't read it from here at this angle, so I can just sort of see it's the same slide I started out with.

	All right, so the idea of a knowledge workshop grew early in my concept, and the idea of a knowledge workshop that's organized for an organization to support it was there by the very early 70s. The realization that it needed to be an integrated knowledge workshop came also by that time. We were lucky enough to get involved with the ARPANET from the very very first, and because of my interest in organizations and collaboration, I volunteered to start up the Network Information Center. Because of that role we're going to play, my computer at SRI was the second one connected to the ARPANET, and so a lot of my people were involved with the protocols and the establishment of all that through the years. Very early we got into that.

	The integrated and the architecture, and the Hypertext, and the role of all of that plays in there. I'd like to sort of show you [net 00:11:19] in with ... Okay, historically, we sort of got shoved into the commercial world in 1978 at Tymshare and selling the service of a system we called AUGMENT then. It was what you saw on that film was NLS for online system in those days. When we went commercial, we changed to a name that people would find some kind of meaning to, so some PR person labeled it AUGMENT.

	AUGMENT had an interesting history by supporting thousands of customers in dozens of organizations over the network from about 1974 till about a year and a half ago. It got to the point of one very large Air force command with thousands of users put in five name frames, and was using it as an organization information system, and it really did very, very unique things. Then they went out for a RFP to say, "Let's go worldwide with this." The trouble was, it was just before the emergence of the terms computer support or cooperative work, collaboration, Hypertext as something popular. The people that would have to put up money to [port 00:12:45] our system into a modern environment so it would be a candidate just couldn't get the nerve to do it.

	They waffled and pulled back and they rewrote the RFP, so it didn't have a lot of the characteristics required that we had in it. A little over a year ago, RFP got won by AT&T for $940 million or something like that, and so then AUGMENT sort of got retired. But, in 1984 the aerospace ... McDonald Douglas wanted to get into the information systems business so they bought Tymshare and Tymnet. Way off in the corner was the little AUGMENT service. I began about five years ago then to trek back and forth to St. Louis to Headquarters trying to interest the aerospace side into the kind of architectural things and the document support systems that we had. Slowly, through having several pilot operations going and all, that has crept in so ...

	A year ago, McDonnell Douglas fired off a four year program with something like $60 million behind it, to produce and try to go for an integrated architecture throughout the spectrum of design, manufacture, and field support. They've called CAD, CAM, [CALS 00:14:06]. A good bit of the architectural things I'll breeze through, and I'll nick into that. We're getting them very much interested in the Hypertext and it's wide area collaboration sort of thing, the special modes that we built. Now, they're people trying to build requirements for what we call and open hyper document system that would support all that.

	If I blitz through, you'd see all this [neat 00:14:34] into into the world ... have to be able to read the [darn 00:14:39] slides. Would it ruin the video? Can you track me if I get down on the floor? I think [my 00:14:50] being able to see is probably more important than ... Very nice, that's my ... I look best in profile. Maybe somebody could read it to me.

	All right. In the world that you guys are more or less involved in, the concepts of server and client are pretty important. My assumption is that there are times that a server also functions as a client in the next stage thing. That if we just propagate that a little bit we say "Well, in general what we want are humans are sort of the ultimate client, and we would like system supporting the humans directly." They generally would think of that as complex functionality involving his workstation that supports him, but in turn can be a client to get service out in the network, and this is sort of the concept we went on.

	In fact, you'd like it to be a manager for you, that would manage your access in a very uniform, integrated way to all of the servers out there. This is the sort of thing we started working on way back. Then you get [all beyond 00:16:13] you and say, "Well, conceptually, I'd like to think of it as a whole organization looking at that service window in a unified way, that lets it work as an evolving organization and not as a bunch of people independently accessing multiple kinds of things." The inter-operability  ability of the people is going to be very important in this organization.

	This is sort of the concepts that were driving us by the very early 70s, so this is a paper that I gave in the 1973 Spring Joint Computer Conference. In fact it's numbered by the same way. It's a file that we can still jump to. Special interest here is item three that we're going to go into, and I can't read the rest of them enough to go into detail. We don't have that much time, anyway. What we're going to do is the equivalent of jumping to item three and opening up one more level, and we see and hear the kind of things about a knowledge workshop. That's why I really was introducing that concept, was saying "If you're going to do knowledge work, think of equipping yourself with the kind of tools, and the organized way in which your work flows, as you would in a workshop. Think of yourself as a craftsmen in there doing work, and think of the skills that you must achieve etc, to make that work flow. Then think of a knowledge organization as a giant workshop for that, and how do you go to work in there?"

	These are the particular issues that we were dealing with in that talk, and the next to the bottom in there, where we're talking about domains, workshop domains is something I'm going to pick up on. Other items in there about the classes of users that are going to be and must be taken care of, and classes of workstation and terminals. If we go on here, I'll skip that part which ... I can't read that well anyway. Here I'll get into some elevated technology that looking at the very simple model of a person sitting at a terminal working through an operating system to an application package, this could be your workstation. When I use "terminal" in these cases, I mean the actual hardware that you interact with, and a workstation in my picture is a terminal plus a processor. The terminal is the display, the cursor control devices, your keyboard, a loud speaker, microphone, whatever else is that which you interact with directly, and the support.

	Very, very early in the 60s it became clear that there were two parts to deal with in that application package. One was the interaction with the user, and the other was the substantive work. I kept running into the problem, the programmers who did the substantive part of it thought that since they know what's going on inside, that they ought to decide on the interface. With much internal stress on our project, we said no. By 1968, we had actually separated and started evolving a second language by which you describe what that interface was going to be. Then this begins to evolve, and [you 00:19:20] says, "Well, why not go on from there, to say why not one application independent user interface system that's just your general way that gives you a homogeneous and unified way to look at your involvement?"

	Well from there, since we got involved in the networks very early, and like ... By 1968, [out of Hawaii 00:19:40] they were using a radio network that had the collision avoidance principles that the Ethernet had. It was very clear by the early 70s that the technology was going to keep evolving and this would be the general way in which organizations were equipped and working. What we wanted to do is say, "Let's not get embroiled in the fights about, everything can go in the terminal since many computers or microcomputers are going to get cheaper and cheaper. Let's just talk about the connectedness we want, and let as the technology evolves, the different modules can move back and around in there, depending on the technological support of capacity in your workstation, and speed, and cost of inter-communications."

	This was the kind of a picture then we get of saying, your terminal equipment is connected through this user interface system to a virtual bus that kind of start in your work station and go out as far as you want. Connect you with all of the different application packages, and that there'd be one special ... Aha! One special segment of that in there that you sort of call your own work place or work shop. Very private feeling like that. The the files n the organization in there should support sort of the multi-domain kinds of things that you do as an individual very flexibly. Then the other things considered to be reached through from that, so, mail and editing and all the things you want to do are in there unified way.

	The very first stage of that was saying, "Well, what we want is a virtual terminal controller so that applications look out at the virtual terminal." We had several level virtual terminal specification by the mid 70s and implemented that way. A remote procedure called protocol, that was a very robust sort of thing, by which our system was made. By '76, this was our third generation of all of this, I guess, and it was really working very effectively. What we wanted as the evolution ... [release 00:21:55] the evolution here from any particular terminal. We want to be sure that different users, classes of users, have a chance of evolving their terminals very easily. That provides for one kind of evolution, which was an important thing all the way through. How does you allow the organization's workshop to evolve?

	The next one is very important ... Here I just give some examples of three more procedure calls that you can have various ... Oh no, this is a case where a server here serving you, in turn, is a client for a server here. A call can come through to this one, evokes one back to here, and that service is integrated into something in here that in turn serves this person. This model, to us, gave the option for, for instance, AI modules being put into the network in this way. In other words, the evolution could go on very flexibly if all the servers out into the network.

	The other one was that it would sense you could actually have different manufacturers and so on, user interface systems as long as they obeyed the same protocol in the same virtual terminal. These concepts of virtual terminals in this sense are fairly strongly embedded in what the McDonnell Douglas's integrated architecture pursuit. They're really going to try to go after that as much as they can. In a big organization, the time it takes to integrate all the different software packages is a huge, huge factor, [it outweighs 00:23:29] off from the cost of the service itself.

	This is the other very important thing for us in there, and ... that have a command language interpreter that watched and got every event the user did, and interpreted according to the grammar file, and the user's profile file to know what to do back in the interaction. Occasionally, pass something off here that got converted to a more procedure call and evoked the service that came out and supported the virtual terminal, etc. This gave us the flexibility for individual but at least classes of users to evolve their vocabulary, and the concept of an open ended vocabulary was just with us from the beginning. That grew out of our concepts, too.

	That you have to have it, that it can be open ended, and this is one of the things where, looking at the strong trends toward icon pictures, that the sense that it's going to run out of open ended field. We stuck with ... avoided ... They had such things as menus and what you call "light buttons", the equivalent of icons, all were conceptually there in the '60s. My sort of simple-minded ergonomic look at it says "No, they will run out of gas so we will use verbs and nouns, and then, whatever your user profile, this thing will allow you in the presentation of that and the recognition when the menus or icons [are at 00:25:02]. That's fine."

	Then what's very important is to add a script interpreter into the command language interpreter. Then, in this sense, the script language can be exactly the verbs and nouns as the user sees them [in 00:25:20] the profile. It really starts freeing up the evolution of the vocabulary and the operations that go, so that part of evolutionary freedom was very, very important. Another extremely important thing that we began by the very early 70s to want to do shared screen work. I remember doing something, I guess it was probably 1972, with somebody from Rome, New York and I in Menlo Park. We're sharing the screen, working on a document together.

	The way by the time all this matured, it's done is a load of special grammar that does your conferencing connection, and you and the guy talk on the phone and the results in another connection through the network. It disconnects the viewers operation path here, so that everything that goes down the line of the virtual terminal here comes down to his virtual terminal. Even if they're using different equipment, he gets as much as possible of the same picture. This guys in control, and they're talking on the telephone. Then you can go through the process where his keyboard and mouse actions, and stuff, act on the service, so you can pass the baton around.

	We've been doing that for ... well, pretty regularly I guess that's 17 years now. Here's a picture that five years ago I was in Singapore giving a demonstration in front of a bunch of people and working with a system that was in Cupertino. Supporting that system over the networks, and I was working quite well to show them. Then I called up my buddy Dwayne Stone who lives in Washington D.C. area, and pretty soon we were connected. That's Dwayne Stone's screen projected for all to see. Dwayne Stone's voice was coming out giving them a lecture there. Then he shifted the controls to me, and I was doing that there. Then we say, "Dwayne, what time is it?" It was exactly 12 hours difference in time between Singapore and Washington D.C. It was very effective.

	Here's something that for years that seemed to me was bound to come about that sort of thing. There's nothing hard about the engineering, it's the inter-operability coordination to do it. Because to let that kind of sharing go on, and the executives that we keep worrying about having to learn too much. Say, "Well, look, you can have staff that are trained that can be like your chauffeur, etc," and this is something to do. In fact, in a heavy construction world, if some executive had to move around out through the jobs, and they said a helicopter be just the thing for him. Oh, but he's too busy to learn how to use a helicopter, and if the company then said, "Oh, we aren't going to buy helicopter for him." You'd think that they were crazy because you have a helicopter pilot that's at his service. That same concept ought to be there.

	These ways of looking at what's happening in the system are important. This just summarizes the kind of thing we were looking for. The evolutionary freedom and the different classes of users having different classes of workstations and terminals through which they could work were just very, very important concepts. Each of those being able to evolve, and the servers out there being able to evolve flexibly too. So that was the pursuit of support of the evolution with the concept that there was a great deal of value going to be derived from all of this is what pursued us. In the AUGMENT world, we now have a little package that runs in the PC that emulates the highest class virtual terminal that the old system still has, and runs like ... The PC can work and support over network. Then this is just another [feeling 00:28:55] of the picture there of this unified environment. You walk through your local work place and there's many other things to talk about. Here, reach through, and the integration of what conceptually the user feels like when he's in there.

	Let's jump back to the kind of concepts that in 62 were in that paper that I produced at that point. I was just thinking I want ... I had decided I want to augment people. I have the image that there's a great deal of value and change. I didn't know how to prove it, it just wasn't intuitive and incidentally the intuitive certainty has just increased year by year by year. There's a great deal of value to pursue and we've just scratched the surface. As an engineer I finally said, "Well, let's see. Where you're starting.?" Well, you're starting with humans and these are the basic capabilities in the knowledge work arena that I pictured humans having.

	You got mortal capabilities, you can grab, and reach, and turn, and twist, and actuate. You got sensory and perceptual machinery that lets you see, and understand, and perceive things. You got a lot of mental machinery that's got some [nice 00:30:09] and cognitive capabilities, and some of it is conscious and all. A bare human being just can't cope with outside world, so what's added? What's added is something I call an augmentation system, and these zones are what's added to the sort of naked-born human being. We all assume there's lots of teaching and learning that's going on, and a lot of unconscious conditioning that goes on to make you fit for the world. A lot of skills in your mortal and perceptual world that you, a lot of times aren't as clear about, but they're there. It's just a lot of skills that we don't appreciate until you watch little children trying to achieve the basic skills.

	Then out here is whole zone of things that your culture hands you as well, that equip you for coping with the world. If you lump all those together and call it an augmentation system, that's what augments the basic human being, then the challenge is what can we do to keep on developing, evolving that augmentation system? How far can we go towards achieving significantly more capability? Well, our first step was trying to categorize a whole bunch of those augmentation system components. [Some 00:31:21] pretty soon I realize why it comes into some pretty simple parts. A very important thing for me was to say, well, let technology offer us a whole bunch of things that in a knowledge workshop, [from a 00:31:34] knowledge work are these kind of aspects your technology is providing. But there are all these other things that we sort of have taken for granted, but that the society builds and provides for us, and we have to develop skills and knowledge. You have to provide some training, and so it's a very important sort of thing.

	I said, "All right, a human system, tool system dichotomy," and lo and behold, we've got something pretty radical coming on over here, so what are we going to do about it? Well, next step is to say, "Uh, almost any capability a human has, that he starts with here, is a composite of functional capability and support he gets from these, plus what he's learned [inside of 00:32:15] here." It's all composite, and so with more thinking at such you say, "Well, it's a very important system, how much gain can we have?" Well, the next step is to realize [while 00:32:27] that most of the capabilities you have, essentially all of them are built upon each other in a hierarchy. Then I did lots of thinking about this, and you get to realizing that hierarchy capabilities, the impact of something coming in over here that quantitatively speaking, just surpasses in its scale of changed capability, any introduction we ever had before.

	The speed, the detail, the color, the communication, the flexibility and portrayals etc, just tremendous. What's going to happen over here is almost every capability level here is probably going to find some way fairly directly to get impacted by this technology that's going over here. You say, "That's great, we can automate the hell out of what's over here." Well, unfortunately that was the first image that people in the mid seventies [ofstuff 00:33:22] took on, and it just swamped out the concept of augmenting. It's taking a long time and it's about time for people to start realizing the concurrent changes that need to go on over here, to find out how you do harness what's [bringing 00:33:36] out here. As you guys within your operability get the functional capability, smoothly coordinate and integrate it so that the power of this is really available through out here, who's going to be working to get the organizations moving? To start exploring and prospecting, and doing invention out there, this side of it?

	Then what's very, very important is for that co-evolution to take place, and not for one side or the other to start moving and dictating. So that co-evolution is just so strong in there, and so [that 00:34:05] ... A big part of why the architecture was pushed towards supporting the evolution is because that's one important thing to do so the whole organization ... This model works for an organization and an individual by the way. It's important for the evolutionary capability be freed up and the architectural, and the inter-operability issue is just extremely critical. It's a real pleasure for me to get your attention for a while to say, please, you guys are going to have a big impact in here. Whether you're from vendors providing that, or you're user organizations that are looking to this, it's time for both of you to start [feeling 00:34:46] that this is co-evolutionary, and time really to wake up, wake up to use your organizations and say you have to play a much more dynamic part in this process.

	That's one reason I left McDonald Douglas this spring to go to Stanford to try to set up a neutral territory, a thing called Bootstrap, and if we get there in the next 15 minutes to through the rest of this stuff, the picture of that process, but ... I really feel that it's ... that that's what we have to get users and vendors poking, and get user organizations in particular really oriented about what they can and should do to start the evolution. One picture that affects people is well, how much gain is there? This character Engelbart that is, as Dan was saying, people said, "Well, he's crazy," and I do mind in a way. It's kind of lonesome being crazy, but it's sort of ... Some way this has been welded into my head for so long I can't shake it or drop it. Even if pursuit of it continually is not very sensible by career development, [it seems 00:36:02].

	Anyway, here's the way I've looked at it continuously and it's just trying to share [with 00:36:09] you an analogy. I'm not going to read it, I can't see it well enough to read it, but it's ... If you analogy that a human organization is like a biological organism, and then you just watch. Pick a few different representative organizations and look at them and say, "If that were an organism how would I characterize it? How smart is it? How quick are its reflexes? How much does it seem to know what's going on? How quickly can it adapt to something changing or new, etc? What kind of a look-ahead picture ... How far ahead does its headlights, or its eyes see in time? If it's careening down to through [the 00:36:54] time trail, and the trail gets rougher and rougher, and it's going faster and faster, is it got enough control, and good enough headlights, and good enough vision to be able to see and avoid, and control it?

	Well, the world is moving faster and faster through a rougher and rougher world, and our organizations are very, very poor as far as that sort of time travel through problem space as a mobile vehicle. To me it's very important, so okay if that's the sense you have of an organization ... [He 00:37:30] says, "Well, organism-wise we've just had a mutation occur very, very suddenly and recently, as far as evolutionary time goes, of this new nervous system technology that has this marvelous speed, accuracy, capability etc, that just far transcends any other thing our organization ever had to work inside it as a nervous system." So you're saying, "Wow, let's do something about that."

	One of the things they can do is to, say, plug it in to replace the nervous system we did have with our old organs etc, and, "Wow, we've done our job." That's like automating your old functions, and [he 00:38:15] says, "No, wait a minute. There gotta be more than that. What about the rest of the organism?" He says, "Really, isn't it that the rest of the organism should be released and start its evolution so that it can learn how to take advantage of that new organs, new kind of functionality, new kinds of relationships and coordination between them.? New perception and sensory things out there, new [mortal 00:38:39] things for the organism?" There really is, to my mind, a gigantic evolution that's going to be done, and with our organizations capability it can be very, very much enhanced.

	You say, "Well, what if your organization you can't sell that the guys?" You believe it but you can't sell it. Well, some organizations are going to take an evolutionary path that slowly pulls ahead, and if the potential is very high for increase, and somebody gets 6% of that, and somebody else goes after and finds 7%, they're gradually going to pull ahead. If somebody finds a way to get 20% of that potential, they're going to be miles ahead, and if somebody each has the chance and learns how with a strategy to get 50%, they'll just start owning the world. Okay, this is sort of the kind of picture I've got, and I feel like it's just going to start a separation process, just like sort of the speed of diffusion of different chemicals through some media, starts separating them. Pretty soon after a few hours you'll see one twice as far ahead as the other. Where [there's 00:39:46] very small difference in their velocity.

	I can't remember what was on that slide, and I can't see it. All right, so anyway this way we might have a chance to getting through. The idea for an individual of domains, that there are a lot of different kind of domains where you do different kind of work. The basic question comes up is, what needs to be the interoperability between domains of this kind? If somebody draws them like that and says, "Oh, every one of those needs to be inter-operable with every other," and [you says 00:40:37], "Oh no, wait a minute. I can pick line X out of that and you can't prove to me that that's got a lot much value." I say, "Yeah that's right," but the thing you start doing is start taking away some of those and saying, "Well, how much money are you saving? And then how sure are you that you're not going to need it?" If pretty soon you just sort of give up, you just say, "Well, boy that's right. There isn't any [operative 00:41:02] way as things evolve for me to say that I'm not going to find new methodologies, and ways of working, and conventions that I won't find value in the interoperability of any of those domains."

	That's a very, very important kind of interoperability thing moved on up from the technology you're usually concerned with on into the humans world, at work. In the end that's what the other interoperability is supposed to serve, isn't it? One of the things about humans interoperability in their domains is the document just supports very, very much, and the files [you own 00:41:43]. This was an early, early concept of saying, "All right, to be inter-operable in some meaningful way I need email," and we started out with a very nice email system in 1970, and sharing files with among our own domains, and among each others. Then the system we called the journal which is essentially like a library that any kind of file you submit to the journal gets taken in and cataloged, and held forever. Was given an identifier number that's always good, so you come back to that journal later and says, "Give me item 2426," and you get it back. It's always there.

	Then also the control of your external documents, and for that to be cataloged also is very important. This is a just a basic sort of thing about supporting interoperability in that knowledge workshop. Then if you add the fact that you have object level address ability inside those files, and that that supports cross reference linkages so that you can interconnect all of that. For instance, I can send you a message and say, "Hey Fred, you got to look at, and here's a link pointing off some place. It seems to conflict what you said last week," another thing going off there. Both you guys seem to be way off from the requirements, another link. One sentence with three links and the email give you, ties things things together. That is an example, it is just very basic to me in about the way it must be done.

	With the journal thing in there like that, when you go on record and have that sort of recorded dialog about things, it's just increases the sort of interoperability of among people. Which after sort of [adds 00:43:31] the time domain of interoperability too. I need to be interoperable with myself, last week. A project in the design phase has to be interoperable back to specification or requirements, and in manufacturing interoperable between them and design, across time and space. It's a very, very important thing to consider.

	Then you get two domains, two compound domains like two people, and you says, "I need to be interoperable between those." This just raises the level of challenge above standards [in the like 00:44:11], and it's just not going to come about if these guys are using, I better not use commercial trade names, but they're using some sort of [futy 00:44:20] system, and these guy is using some kind of big blue system. You know that they're using different vernacular about what things are going on. The structure of the files, the [have 00:44:37] no concept of address-ability, so I can send you a message, I can point back to something I generated before. You just know that that's not going to be inter-operable with the kind of capability the potential promises, so that organization's going to grow how fast if that's what they provide for you. [You 00:44:55] say, "All right, that can't work."

	You step on a little bit and you look at ... that's I think the aerospace one, is that right? Anyway, yeah, manufacturing, so you look at the major functional areas in there that within themselves have to provide interoperability between their individuals as well as between all of these different functions. Again you can say, "Oh, some of those lines I don't think I'm going to need to really depend upon." But you just say, "Well, what does it cost once you get passed a certain point?" That interoperability emblem is very much ... levels of that goes on. We'll show you a little bit more of that in fact, you [said 00:45:36], "Well, here's a big aircraft project. The advanced tactical fighter, and I don't think the [Northrep 00:45:46] was going to be the supreme in one of the [three 00:45:50] teams that's aiming for that thing." They're going to have 2000/3000 people working in there. When they get going they'd have to have these multiple tiers of suppliers that add up to be maybe 7000 companies.

	You say, "Look at all those domains." Each of those suppliers has a domain and if I can't send you a contract that sites ... I mean if I can send you a document that says, "Here's a contract," and it's got links pointing off to the relevant specifications, and requirements, and standards. You can follow those no matter where they're held and who's generated them, then it's very tidy and nailed down, and the response goes [like that 00:46:31]. Every place you look at can ... If you can send somebody something with links, and if there are common things about the structure so that I can say, "This link follows to a certain point and shows a certain view," as you saw mine over there. You say, "The payoff would just be immense." We try to just look at a domain like that and say, "How many millions of dollars a year would you save?" Somebody says, "200, 500 million?" Well, I don't know, it's a lot. It would mean a tremendous amount to the vitality of that company.

	You've got McDonnel Douglas is going to be a junior partner, and they have to team together, and it's been forced on [it 00:47:13], so they got all the same problems within there of supporting in that. When they team in together, as two big organizations got to team, what's that going to be like? Where they got all that sort of conventions inside in their environment, and they're going to overlap like this with a lot of collaboration in there, plus all kinds of mix in there. [He 00:47:36] says, "Wow, that's the governments forcing them to do that for very reasonable, logical things." The complexity of managing in that is just out of this world, and the people that are trying to get ready to plan and manage that program either they just don't know about any existing supporting system for managing that they feel can do the job.

	Well, then somebody starts showing them the creaky old augment system, and look how you can do the whole work break down structure hierarchically. How you can jump off from links to things. How the journal makes this record of dialog. How you can keep project status. How you can do this, and this, and this, and they look at that and it's just [inaudible 00:48:13]. That would be fabulous. We don't know anything that could do it that well, so both those companies now are starting working on requirement statement, and as a matter of fact they're seriously thinking about putting some deck twenties in their computer rooms, for a while, to get started using AUGMENT. It's ludicrous, but then they're saying, and they want to hustle about how can they get the world to provide them with some thing that's as good, and upward compatible, etc? They're actually going through that process now.

	You look at the whole aerospace industry and you realize there's so much overlap between customers and suppliers, that no one of these clusters of industrial teams can go it alone. You just begin to realize there are just some immense headway still in interoperability that's going to be required. Well, conceptually ... It's not 10:00. Since I can't charge Dan and you guys the 15 minutes that we were delayed, or something like that, so I'll just go through it very fast. I wish I could just make a skip to the punch lines at the end.

	Anyway, here's some things about the you think about it. Humans when they're thinking about knowledge work, they start out with this beautiful capability of handling symbols, and relationships in their mind. They may not be aware of it at the outset, but after a while culturally they start giving labels, and start developing a language, and start realizing these concepts can be given nouns, and verbs. The relationships between them can actually be put there as syntactic relationships, etc, and you get a language. It's a fabulous move towards augmenting the human. A little bit further [now 00:50:18], this is when I tried to externalize that. I would like to make a map of that internal structure outside to work on, and linear paper is just a very feeble map. It loses lots of the dimensionality.

	The computer can hold a whole bunch, so why not start trying to learn about a structure of our files so that they represent better, and better mapping of what's in the conceptual structure of our understanding or an argument that I have. Other aspects of like saying, the span of your conceptual grasp at any one time isn't very great. In fact it's really kind of puny, but you got this marvelous capability of being able to zoom in very, very rapidly. Just travel instantly to some conceptual domain, insert yourself at the right kind of level of conceptual working and deal with it. If it weren't for that, if you didn't have that jumping, very fast jumping capability and zooming, and providing the view that you needed for your own contemplation. It would just be pitifully inadequate as a way to do any kind of thinking or working. We try to emulate that sort of thing, and that's how the hypertext world came, and I really don't have the time to go through that, but all your conceptual structuring in here, that position for jumping, that viewing was very important, and sharing the screens were very important.

	This is how that you actually built a system, and you get back to all this so that how you can move around in those documents are being structured like that, make a very, very important thing. This is just ways of viewing the same document very quickly at different levels, in different degrees from the same point, and I won't even stop with the rest. You can go through it that fast if you want to. One of the properties underneath we happened to do way back was add the date, and time, and the identifier of the last person that changed that object in the file. You can still go looking at source code, and some of our source code in this big AUGMENT system, we changed and got this file structure going in 1970s. Some places there's code [we're 00:52:40] identifying with people going way, way, way back. Jon Postel is here, I saw him like that, so his [ident 00:52:47] is probably in there at some places.

	I just can't get ... I can't get through the rest of the material in any kind of sensible way, so if you'll excuse me I'll just blitz through and get at a couple of highlights. It's like saying, the picture of a community of people working on a shared area as we were talking about, and pretty soon you realize there's a lot of dialog and this is just a cycle of activity that records grow, and people are building and commenting, and arguing about the records. Their intelligence collections about the outside world, all that's being organized. The groups knowledge product that's steadily evolving, I just gave it a generic name I called it a hand book. Then I said, "All right," the handbook and this cycle of evolution constantly day by day. It's what generates in the end the design, or the plan of whatever it is that's [the 00:53:56] community of projects resolves. You say, "All right," to provide that sort of function for communities and projects would be very, very important.

	The idea of a Bootstrap is saying, "All right, let's go after that early, [that would 00:54:10] do a lot value to all kinds of projects,"  and if you start employing it within an organization above the evolution of what's going on there. It would be very, very valuable, so if we say, here's an organization and its augmentation system. Let's make an explicit project to say we're going to start improving that augmentation system, and say, "All right." Some organizational unit with a human and tool system and I'm setting up an [ASEP 00:54:41], an augmentation system improvement project. In this Bootstrapping sense I just come to say to organizations, "Look, why don't you start something like that?" Then what would be really valuable there, there's a lot of these games we're trying to introduce that way. If you invest in this kind of bootstrap handbook cycle capability, that will have a lot of value in here. It will also just do tremendously if you organize your ASEPs in a community that's supported even more better like that. The idea of hierarchies, of communities in a bootstrapping investment among organizations that can lead to consortium, sort of what's just very, very quickly behind the bootstrapping thing.

	We're trying to get some user organizations and vendors starting interested, so we're actually holding a little three days seminar. Tiny, tiny seminar by comparison to this in three weeks. Dan arranged that in the registration kit there'd be little fliers that described that, so if a very, very small percentage of your organizations are interested enough, look us up. This is ... Just to finish, this is if whenever we're trying to buy all this technology, this is a kind of thing that keeps me in mind that you're talking about humans working with their knowledge work. This is the way I feel about it. It's stuff that you've got to maneuver and manipulate, and shape up, and it isn't anything like a nice organized database of something. It's like arguments, questions, everything else that's going on and trying to support that, but that's the art of getting things done.

	I'll say, "Okay, take that picture," and the next one is to say, "Ah, yes technology really probably can lift this to some new heights, in a sense." Okay, that's what I was trying to give you a picture about, what it's all about. With that I'm done. Only five minutes late.

David Brandon:	Well, I'm just going to say thank you Doug. I mean, it's marvelous. Hey Doug, Your wired man, give me ... All right, so thank you very much folks and off to your breaks, and then onto the beginning of the technical sessions.